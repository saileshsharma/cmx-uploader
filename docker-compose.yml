services:
  db:
    image: postgres:16
    container_name: cmx_pg
    environment:
      POSTGRES_USER: ${DB_USER:-cmx}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-cmx}
      POSTGRES_DB: ${DB_NAME:-cmx_uploader}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-cmx} -d ${DB_NAME:-cmx_uploader}"]
      interval: 5s
      timeout: 3s
      retries: 12

  uploader:
    build: .
    image: cmx-uploader:latest
    container_name: cmx_uploader
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Spring datasource (points to service name "db")
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME:-cmx_uploader}
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-cmx}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-cmx}
      # Optional: JPA behavior (or manage via your application.yml)
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      # If you expose actuator health unauthenticated, this healthcheck works:
      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: "true"
      MANAGEMENT_SERVER_PORT: "8085"
    ports:
      - "8085:8085"
    volumes:
      # if your uploader writes files (images) locally:
      - uploads:/data/uploads
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8085/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 12

volumes:
  pgdata:
  uploads:
